\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{\PYGZsh{} Lesson: Exceptions in Python}

\PYG{c+c1}{\PYGZsh{} 1. Handling runtime errors with try\PYGZhy{}except blocks}

\PYG{k}{try}\PYG{p}{:}
    \PYG{n}{result} \PYG{o}{=} \PYG{l+m+mi}{5} \PYG{o}{/} \PYG{l+m+mi}{0}
\PYG{k}{except} \PYG{n+ne}{ZeroDivisionError}\PYG{p}{:}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}An error occurred: Division by zero\PYGZdq{}}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} 2. Handling file errors specifically and generally}

\PYG{k}{try}\PYG{p}{:}
    \PYG{n}{file} \PYG{o}{=} \PYG{n+nb}{open}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}my\PYGZus{}file.txt\PYGZdq{}}\PYG{p}{,} \PYG{l+s+s2}{\PYGZdq{}r\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{content} \PYG{o}{=} \PYG{n}{file}\PYG{o}{.}\PYG{n}{read}\PYG{p}{()}
\PYG{k}{except} \PYG{n+ne}{FileNotFoundError}\PYG{p}{:}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}The file was not found\PYGZdq{}}\PYG{p}{)}
\PYG{k}{except}\PYG{p}{:}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}An unspecified error has occurred\PYGZdq{}}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} 3. Raising exceptions manually}

\PYG{n}{x} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}
\PYG{k}{if} \PYG{n}{x} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{:}
    \PYG{k}{raise} \PYG{n+ne}{ValueError}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}The value must not be negative.\PYGZdq{}}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} 4. Handling raised exceptions with custom messages}

\PYG{k}{try}\PYG{p}{:}
    \PYG{n}{x} \PYG{o}{=} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n+nb}{input}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}x = \PYGZdq{}}\PYG{p}{))}
    \PYG{k}{if} \PYG{n}{x} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{:}
        \PYG{k}{raise} \PYG{n+ne}{ValueError}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}The value must not be negative.\PYGZdq{}}\PYG{p}{)}
\PYG{k}{except} \PYG{n+ne}{ValueError} \PYG{k}{as} \PYG{n}{exception}\PYG{p}{:}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{n}{exception}\PYG{p}{)}

\end{Verbatim}
